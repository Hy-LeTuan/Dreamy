"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var stream_ts_1 = require('../type/stream.ts');
var Input = (function (_super) {
    __extends(Input, _super);
    function Input() {
        _super.call(this);
    }
    return Input;
}(stream_ts_1.default));
var Stream = (function (_super) {
    __extends(Stream, _super);
    function Stream() {
        _super.apply(this, arguments);
    }
    return Stream;
}(Input));
var Record = (function () {
    function Record() {
        var _this = this;
        this.input = new Input();
        this.input.on('data', function () { return _this.data(); });
    }
    Record.prototype.data = function () {
        var _this = this;
        if (!this.immediate)
            this.immediate = setImmediate(function () { return _this.exec(); });
    };
    Record.prototype.exec = function () {
    };
    return Record;
}());
